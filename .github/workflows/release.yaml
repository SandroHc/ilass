name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-win-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          version=$(grep '^version = ' ./ilass-cli/Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-gnu

      - name: Install cross-compilation dependencies
        run: |
          sudo apt update
          sudo apt install -y gcc-mingw-w64-x86-64

      - name: Build
        run: |
          cargo build --release --bin ilass --target x86_64-pc-windows-gnu

      - name: Package
        run: |
          # Create package structure
          mkdir -p pkg

          # Copy FFmpeg files
          curl -L https://github.com/GyanD/codexffmpeg/releases/download/5.0/ffmpeg-5.0-essentials_build.zip -o target/ffmpeg.zip
          unzip target/ffmpeg.zip -d target
          cp target/ffmpeg-5.0-essentials_build/LICENSE pkg/LICENSE-ffmpeg
          cp target/ffmpeg-5.0-essentials_build/bin/ffmpeg.exe pkg/ffmpeg.exe
          cp target/ffmpeg-5.0-essentials_build/bin/ffprobe.exe pkg/ffprobe.exe

          # Copy ilass files
          cp LICENSE pkg/LICENSE-ilass
          cp target/x86_64-pc-windows-gnu/release/ilass.exe pkg/ilass.exe

          # Create batch script
          echo -ne '@echo off\r\nset ILASS_FFMPEG_PATH=%~dp0ffmpeg.exe\r\nset ILASS_FFPROBE_PATH=%~dp0ffprobe.exe\r\n"%~dp0ilass.exe" %*\r\n' > pkg/ilass.bat

          # Create zip archive
          cd pkg && zip -r "ilass-${{ steps.get_version.outputs.version }}-win-x86_64.zip" .
          mv *.zip ..

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: win-x86_64
          path: ilass-${{ steps.get_version.outputs.version }}-win-x86_64.zip

  build-linux-x86_64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get version
        id: get_version
        run: |
          version=$(grep '^version = ' ./ilass-cli/Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-unknown-linux-musl

      - name: Install musl tools
        run: |
          sudo apt update
          sudo apt install -y musl-tools

      - name: Build
        run: |
          cargo build --release --bin ilass --target x86_64-unknown-linux-musl

      - name: Package
        run: |
          tar -czvf "ilass-${{ steps.get_version.outputs.version }}-linux-x86_64.tar.gz" --dir target/x86_64-unknown-linux-musl/release ilass

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: linux-x86_64
          path: ilass-${{ steps.get_version.outputs.version }}-linux-x86_64.tar.gz

  release:
    needs: [ build-win-x86_64, build-linux-x86_64 ]
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows artifacts
        uses: actions/download-artifact@v4
        with:
          name: win-x86_64
          path: ./artifacts

      - name: Download Linux artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-x86_64
          path: ./artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          draft: true
          files: ./artifacts/*
