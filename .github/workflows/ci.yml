# Makes sure the app still builds and the unit tests still pass
# Based on: https://doc.rust-lang.org/cargo/guide/continuous-integration.html
name: CI

on:
  pull_request:
  merge_group:
  push: # Run CI on the main branch after every merge. This is important to fill the GitHub Actions cache in a way that pull requests can see it
    branches:
      - master
  workflow_dispatch:

jobs:
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Clippy
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt

      - name: Check formatting
        run: cargo fmt --all -- --check

  tests:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    name: Tests (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Setup cache
        uses: Swatinem/rust-cache@v2

      - name: Run tests
        run: cargo test --workspace

# TODO: replace features `ffmpeg-library` and `ffmpeg-binary` with singular `ffmpeg-binary`
#      - name: Run tests (--no-default-features)
#        run: cargo test --workspace --no-default-features

      - name: Run tests (--all-features)
        run: cargo test --workspace --all-features

      - name: Run doctests
        run: cargo test --workspace --doc
